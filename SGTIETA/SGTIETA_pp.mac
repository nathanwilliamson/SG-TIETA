########################################################
# NH Williamson 7/28/2020
#
# This static gradient time incremented echo train acquisition (SG-TIETA) pulse sequence
# was used to collect data for  a paper submitted by Cai, Williamson, Witherspoon, Ravin, # and Basser to Physical Review Letter, Nov. 2020. Please cite accordingly.
#
# CPMG pulse sequence with each echo time incremented by a delay
# adapted for single-shot diffusion
#added taushift
#changed delay list to one which gets to longer delays faster [0,1,3,6,7,...]
########################################################

procedure(pulse_program,dir,mode)


# Interface description (name, label, x, y, ctrlType, varType)
   interface = ["b1Freq",       "B1 Frequency (MHz)",   "0","0",     "tbwv",  "freq",
               "repTime",      "Repetition time (ms)", "0","1.6",   "tbwv",   "float,[20,1e8]",

               "90Amplitude",  "90 amplitude (dB)",    "1","0",     "tb",     "pulseamp",
               "180Amplitude", "180 amplitude (dB)",   "1","1",     "tb",     "pulseamp",
               "pulseLength",  "Pulse length (us)",    "1","2",     "tb",     "float,[1,500]",
               "ted",         "echo offset (us)",      "1","4",    "tb",      "float,[0.25,500]",   

               "echoTime",     "Echotime (us)",        "2","0",     "tb",     "sdelay",
               "nrEchoes",     "Number of echoes",     "2","1",     "tb",     "integer,[1,8192]",
               "echoShift",    "Echo shift (us)",      "2","2",     "tb",     "float,[-20,20]",
               "firstTauShift",    "first tau shift",  "2","3",     "tb",     "float,[-20,20]",
               "autoPhase",    "Auto-phase",           "2","4",     "cb",     "no,yes"]


  tabs = ["Pulse sequence","Acquisition","Laplace_CPMG","File Settings"]

# Relationships between pulse-sequence and GUI parameters
   relationships = ["a1 = 90Amplitude",
                    "a2 = 180Amplitude",
                    "d1 = pulseLength",
                    "d2 = (echoTime-2)/2-d1-pgo-0.06-firstTauShift",        # subtracting 2 from every echo time because I want to account for the first entry in t5 (the variable delay), which is 1 us)
                                                              # subtracting 0.06 microseconds because loop takes this long to complete but is executed only once when etering the loop
                     "d3 = (echoTime-2)/2-acqTime*500-d1/2+rxLat+echoShift",
                    "d4 = (echoTime-2)-d1-pgo-d3-0.13", #trying to subtract the time associated with incindex
                    "n1= nrEchoes",
                    "n2 = nrPnts",

                    # "t5=(ted*[0,1,3,6,7,10,12,11,15,20,21,24,26,20,21,33,35,33,34,33,39,47,44,42,44,47,53,65,62,52,58,65,66,65,66,65,62,65,75,93,94,93,90,93,99,93,94,93,90,93,94,93,99,93,103,120,108,93,107,134,131,120,122,120,126,120,121,134,135,152,149,134,145,152,149,152,149,152,154,152,154,152,163,166,158,166,176,175,167,166,181,184,185,212,213,212,204,184,195,212,213]+1)*50-1",                     
                     "t5=(ted*[0,1,2,4,3,7,5,6,9,11,10,14,12,8,13,20,15,18,16,17,22,25,19,23,21,26,27,29,24,28,30,31,36,34,33,32,35,40,45,43,42,37,39,49,41,38,47,46,44,53,50,52,51,60,48,54,63,57,65,55,62,58,59,61,56,64,67,72,68,66,74,69,71,77,81,76,73,70,75,82,85,90,78,79,84,91,86,80,83,92,89,100,95,94,87,88,93,96,99,104,105]+1)*50-1",
                    "totPnts = nrPnts*nrEchoes",
                    #"totTime = nrEchoes*echoTime+nrEchoes*(nrEchoes/2-1)*ted"]
                     "totTime = nrEchoes*echoTime+nrEchoes*(nrEchoes/2+1)*ted"]


# These parameters will be changed between experiments
   variables = [""]

# x and y spacing between controls
   dim = [155,26]

# Pulse sequence
   initpp(dir) # Reset internal parameter list
   cleardata(64000)

   setindex(t5,0)

  # trigger("on high")               # Wait for trigger level to go high

   pulse(mode,a1,p1,d1)           # 90 pulse
   delay(d2)                      # 90 - 180 delay

   loop(l1,n1)
      delay(t5)                # echo offset
      pulse(mode,a2,p2,d1)        # 180 internal pulse
      delay(d3)                 # 180 - acq delay
      delay(t5)                 
      acquire("append",n2,d4)     # Acquire echo and wait                  
      incindex(t5)             #increment echo offset

   endloop(l1)

   lst = endpp() # Return parameter list

# Phase cycle

 phaseList = [0,2; # x,-x: 90 phase
               1,1; # y, y: 180 phase
               0,2] # x,-x: Acquire phase
# phaseList = [2,0,2,0; # x,-x: 90 phase
#               3,1,1,3; # y, y: 180 phase
#               2,0,2,0] # x,-x: Acquire phase


endproc(lst,tabs,interface,relationships,variables,dim,phaseList)
